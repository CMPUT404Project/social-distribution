{"ast":null,"code":"var _jsxFileName = \"F:\\\\Code\\\\GitHub\\\\social-distribution\\\\frontend\\\\src\\\\components\\\\FriendsList\\\\FriendsList.jsx\";\nimport { Card, Typography, Grid } from '@mui/material';\nimport React from 'react';\nimport \"./FriendsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  let displayName = props.data.displayName;\n  let github = props.data.github;\n  let profileImage = props.data.profileImage ? props.data.profileImage : \"https://i.imgur.com/w3UEu8o.jpeg\";\n  // var colours = [\"red\", \"blue\", \"green\"] // for future implementation\n  var status = [\"Friend\", \"True Friend\", \"Real Friend\"];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"hoverCard\",\n      style: {\n        margin: 3,\n        padding: \"2% 2%\",\n        cursor: \"pointer\"\n      },\n      elevation: 15,\n      onClick: () => {\n        window.open(props.data.url);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          borderRadius: \"50%\",\n          height: \"100px\",\n          width: \"100px\",\n          objectPosition: \"center\",\n          objectFit: \"cover\"\n        },\n        src: profileImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          display: \"inline\",\n          padding: \"0% 5%\"\n        },\n        children: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          display: \"inline\"\n        },\n        children: github\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h7\",\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        children: \"Good Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = User;\n{/*\r\n get request for friend should AT LEAST return \r\n {\r\n    type: string // friend, true friend, real friend\r\n    id: str      // url at where their profile originates from (could be from a different node?)\r\n    host: str    // where the user originally had their user\r\n    displayName str // \r\n }type (of friend), id, host, displayName,  \r\n dasd\r\n */}\nexport const FriendsList = () => {\n  var data = {\n    type: \"authors\",\n    items: [{\n      type: \"author\",\n      id: \"http://127.0.0.1:5454/authors/1d698d25ff008f7538453c120f581471\",\n      url: \"http://127.0.0.1:5454/authors/1d698d25ff008f7538453c120f581471\",\n      host: \"http://127.0.0.1:5454/\",\n      displayName: \"Greg Johnson\",\n      github: \"http://github.com/gjohnson\",\n      profileImage: \"https://i.imgur.com/k7XVwpB.jpeg\"\n    }, {\n      type: \"author\",\n      id: \"http://127.0.0.1:5454/authors/9de17f29c12e8f97bcbbd34cc908f1baba40658e\",\n      host: \"http://127.0.0.1:5454/\",\n      displayName: \"Lara Croft\",\n      url: \"http://127.0.0.1:5454/authors/9de17f29c12e8f97bcbbd34cc908f1baba40658e\",\n      github: \"http://github.com/laracroft\",\n      profileImage: \"https://i.imgur.com/k7XVwpB.jpeg\"\n    }, {\n      type: \"author\",\n      id: \"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908f1658e\",\n      host: \"http://127.0.0.1:8000/\",\n      displayName: \"Byron Tung\",\n      url: \"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908f1658e\",\n      github: \"http://github.com/byrontung\",\n      profileImage: \"https://i.imgur.com/LRoLTlK.jpeg\"\n    }, {\n      type: \"author\",\n      id: \"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908fff1658e\",\n      host: \"http://127.0.0.1:8000/\",\n      displayName: \"Tyron Bung\",\n      url: \"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908fff1658e\",\n      github: \"http://github.com/tyronbung\"\n    }]\n  };\n  let users = data.items;\n  // console.log(users)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map(d => {\n      // return (<Card style={{margin:20}}>{d.displayName}</Card>)\n      return /*#__PURE__*/_jsxDEV(User, {\n        data: d\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n};\n_c2 = FriendsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"FriendsList\");","map":{"version":3,"names":["Card","Typography","Grid","React","User","props","displayName","data","github","profileImage","status","margin","padding","cursor","window","open","url","borderRadius","height","width","objectPosition","objectFit","display","float","FriendsList","type","items","id","host","users","map","d"],"sources":["F:/Code/GitHub/social-distribution/frontend/src/components/FriendsList/FriendsList.jsx"],"sourcesContent":["import {Card, Typography, Grid} from '@mui/material'\r\nimport React from 'react'\r\nimport \"./FriendsList.css\"\r\n\r\nexport const User = (props) => {\r\n    let displayName = props.data.displayName\r\n    let github = props.data.github\r\n    let profileImage = props.data.profileImage ? props.data.profileImage : \"https://i.imgur.com/w3UEu8o.jpeg\"\r\n    // var colours = [\"red\", \"blue\", \"green\"] // for future implementation\r\n    var status = [\"Friend\", \"True Friend\", \"Real Friend\"]\r\n    return (\r\n        <Grid>\r\n            <Card className='hoverCard' style={{margin:3, padding:\"2% 2%\", cursor:\"pointer\"}} elevation={15} onClick={() => {window.open(props.data.url)}}>\r\n                <img style={{borderRadius:\"50%\", height:\"100px\", width:\"100px\", objectPosition:\"center\", objectFit:\"cover\"}} src={profileImage}/> \r\n                <Typography variant=\"h4\" style={{display:\"inline\", padding:\"0% 5%\"}}>{displayName}</Typography>\r\n                <Typography variant=\"h6\" style={{display:\"inline\"}}>{github}</Typography>\r\n                <Typography variant=\"h7\" style={{display:\"inline\", float:\"right\"}}>Good Friend</Typography>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\n{/*\r\n get request for friend should AT LEAST return \r\n {\r\n    type: string // friend, true friend, real friend\r\n    id: str      // url at where their profile originates from (could be from a different node?)\r\n    host: str    // where the user originally had their user\r\n    displayName str // \r\n }type (of friend), id, host, displayName,  \r\n dasd\r\n*/}\r\n\r\nexport const FriendsList = () => {\r\n    var data = {\r\n        type: \"authors\",      \r\n        items:[\r\n            {\r\n                type:\"author\",\r\n                id:\"http://127.0.0.1:5454/authors/1d698d25ff008f7538453c120f581471\",\r\n                url:\"http://127.0.0.1:5454/authors/1d698d25ff008f7538453c120f581471\",\r\n                host:\"http://127.0.0.1:5454/\",\r\n                displayName:\"Greg Johnson\",\r\n                github: \"http://github.com/gjohnson\",\r\n                profileImage: \"https://i.imgur.com/k7XVwpB.jpeg\"\r\n            },\r\n            {\r\n                type:\"author\",\r\n                id:\"http://127.0.0.1:5454/authors/9de17f29c12e8f97bcbbd34cc908f1baba40658e\",\r\n                host:\"http://127.0.0.1:5454/\",\r\n                displayName:\"Lara Croft\",\r\n                url:\"http://127.0.0.1:5454/authors/9de17f29c12e8f97bcbbd34cc908f1baba40658e\",\r\n                github: \"http://github.com/laracroft\",\r\n                profileImage: \"https://i.imgur.com/k7XVwpB.jpeg\"\r\n            },\r\n            {\r\n                type:\"author\",\r\n                id:\"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908f1658e\",\r\n                host:\"http://127.0.0.1:8000/\",\r\n                displayName:\"Byron Tung\",\r\n                url:\"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908f1658e\",\r\n                github: \"http://github.com/byrontung\",\r\n                profileImage: \"https://i.imgur.com/LRoLTlK.jpeg\"\r\n            },\r\n            {\r\n                type:\"author\",\r\n                id:\"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908fff1658e\",\r\n                host:\"http://127.0.0.1:8000/\",\r\n                displayName:\"Tyron Bung\",\r\n                url:\"http://127.0.0.1:8000/authors/9de17f29c12e8f97bcbbd34cc908fff1658e\",\r\n                github: \"http://github.com/tyronbung\",\r\n            },\r\n        ]\r\n    }\r\n    let users = data.items\r\n    // console.log(users)\r\n    return (\r\n        < >\r\n            {users.map((d) => {\r\n                // return (<Card style={{margin:20}}>{d.displayName}</Card>)\r\n                return(<User key={d.id} data={d}></User>)\r\n            })}\r\n        </>\r\n\r\n    )\r\n}\r\n"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,IAAI,QAAO,eAAe;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAA;AAAA;AAE1B,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAC3B,IAAIC,WAAW,GAAGD,KAAK,CAACE,IAAI,CAACD,WAAW;EACxC,IAAIE,MAAM,GAAGH,KAAK,CAACE,IAAI,CAACC,MAAM;EAC9B,IAAIC,YAAY,GAAGJ,KAAK,CAACE,IAAI,CAACE,YAAY,GAAGJ,KAAK,CAACE,IAAI,CAACE,YAAY,GAAG,kCAAkC;EACzG;EACA,IAAIC,MAAM,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,aAAa,CAAC;EACrD,oBACI,QAAC,IAAI;IAAA,uBACD,QAAC,IAAI;MAAC,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAACC,MAAM,EAAC,CAAC;QAAEC,OAAO,EAAC,OAAO;QAAEC,MAAM,EAAC;MAAS,CAAE;MAAC,SAAS,EAAE,EAAG;MAAC,OAAO,EAAE,MAAM;QAACC,MAAM,CAACC,IAAI,CAACV,KAAK,CAACE,IAAI,CAACS,GAAG,CAAC;MAAA,CAAE;MAAA,wBAC1I;QAAK,KAAK,EAAE;UAACC,YAAY,EAAC,KAAK;UAAEC,MAAM,EAAC,OAAO;UAAEC,KAAK,EAAC,OAAO;UAAEC,cAAc,EAAC,QAAQ;UAAEC,SAAS,EAAC;QAAO,CAAE;QAAC,GAAG,EAAEZ;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eACjI,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,KAAK,EAAE;UAACa,OAAO,EAAC,QAAQ;UAAEV,OAAO,EAAC;QAAO,CAAE;QAAA,UAAEN;MAAW;QAAA;QAAA;QAAA;MAAA,QAAc,eAC/F,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,KAAK,EAAE;UAACgB,OAAO,EAAC;QAAQ,CAAE;QAAA,UAAEd;MAAM;QAAA;QAAA;QAAA;MAAA,QAAc,eACzE,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,KAAK,EAAE;UAACc,OAAO,EAAC,QAAQ;UAAEC,KAAK,EAAC;QAAO,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB;IAAA;MAAA;MAAA;MAAA;IAAA;EACxF;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf,CAAC;AAAA,KAhBYnB,IAAI;AAoBjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AAEF,OAAO,MAAMoB,WAAW,GAAG,MAAM;EAC7B,IAAIjB,IAAI,GAAG;IACPkB,IAAI,EAAE,SAAS;IACfC,KAAK,EAAC,CACF;MACID,IAAI,EAAC,QAAQ;MACbE,EAAE,EAAC,gEAAgE;MACnEX,GAAG,EAAC,gEAAgE;MACpEY,IAAI,EAAC,wBAAwB;MAC7BtB,WAAW,EAAC,cAAc;MAC1BE,MAAM,EAAE,4BAA4B;MACpCC,YAAY,EAAE;IAClB,CAAC,EACD;MACIgB,IAAI,EAAC,QAAQ;MACbE,EAAE,EAAC,wEAAwE;MAC3EC,IAAI,EAAC,wBAAwB;MAC7BtB,WAAW,EAAC,YAAY;MACxBU,GAAG,EAAC,wEAAwE;MAC5ER,MAAM,EAAE,6BAA6B;MACrCC,YAAY,EAAE;IAClB,CAAC,EACD;MACIgB,IAAI,EAAC,QAAQ;MACbE,EAAE,EAAC,kEAAkE;MACrEC,IAAI,EAAC,wBAAwB;MAC7BtB,WAAW,EAAC,YAAY;MACxBU,GAAG,EAAC,kEAAkE;MACtER,MAAM,EAAE,6BAA6B;MACrCC,YAAY,EAAE;IAClB,CAAC,EACD;MACIgB,IAAI,EAAC,QAAQ;MACbE,EAAE,EAAC,oEAAoE;MACvEC,IAAI,EAAC,wBAAwB;MAC7BtB,WAAW,EAAC,YAAY;MACxBU,GAAG,EAAC,oEAAoE;MACxER,MAAM,EAAE;IACZ,CAAC;EAET,CAAC;EACD,IAAIqB,KAAK,GAAGtB,IAAI,CAACmB,KAAK;EACtB;EACA,oBACI;IAAA,UACKG,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAK;MACd;MACA,oBAAO,QAAC,IAAI;QAAY,IAAI,EAAEA;MAAE,GAAdA,CAAC,CAACJ,EAAE;QAAA;QAAA;QAAA;MAAA,QAAkB;IAC5C,CAAC;EAAC,iBACH;AAGX,CAAC;AAAA,MApDYH,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}